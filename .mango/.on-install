#!/usr/bin/env bash
set -euo pipefail

repo_root="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
mango_dir="$repo_root/.mango"
venv_path="$mango_dir/venv"

# Check Python version
python_version=$(python3 -c 'import sys; print(".".join(map(str, sys.version_info[:2])))')
required_version="3.8"

if [ "$(printf '%s\n' "$required_version" "$python_version" | sort -V | head -n1)" != "$required_version" ]; then
    echo "Error: Python $required_version or higher is required. Found $python_version"
    exit 1
fi

if [[ ! -d "$venv_path" ]]; then
	echo "Creating virtual environment..."
	python3 -m venv "$venv_path"
fi

source "$venv_path/bin/activate"
echo "Upgrading pip..."
pip install --upgrade pip
echo "Installing dependencies..."
pip install -r "$repo_root/requirements.txt"
echo "Installation complete!"

# Copy template preamble into user repo for convenience.
if [[ -n "${MANGO_REPO_PATH:-}" ]]; then
	if [[ -f "$repo_root/preamble.tex" ]]; then
		cp "$repo_root/preamble.tex" "$MANGO_REPO_PATH/"
		echo "Copied preamble.tex to $MANGO_REPO_PATH"
	else
		echo "Warning: preamble.tex not found at $repo_root" >&2
	fi
else
	echo "Warning: MANGO_REPO_PATH is not set; skipping preamble copy." >&2
fi

echo "Checking TeX Live packages..."
if command -v kpsewhich >/dev/null 2>&1; then
	ensure_fandol_fonts() {
		local -a fandol_files=(
			FandolSong-Regular.otf
			FandolHei-Regular.otf
			FandolFang-Regular.otf
		)

		local have_tex_font=0
		for _font in "${fandol_files[@]}"; do
			if kpsewhich "$_font" >/dev/null 2>&1; then
				have_tex_font=1
				break
			fi
		done

		if (( have_tex_font == 0 )); then
			if command -v tlmgr >/dev/null 2>&1; then
				echo "Installing Fandol fonts for CJK support via tlmgr..."
				if tlmgr install fandol; then
					have_tex_font=1
				else
					echo "Warning: tlmgr failed to install Fandol fonts." >&2
				fi
			fi
		fi

		if (( have_tex_font == 0 )) && command -v apt-get >/dev/null 2>&1; then
			if dpkg-query -W -f='${Status}' fonts-fandol 2>/dev/null | grep -q 'installed'; then
				echo "Fandol fonts already installed via apt."
				have_tex_font=1
			else
				if command -v sudo >/dev/null 2>&1 && sudo -n true 2>/dev/null; then
					echo "Installing Fandol fonts for CJK support via apt..."
					if sudo apt-get update; then
						if sudo apt-get install -y fonts-fandol; then
							have_tex_font=1
							fc-cache -f >/dev/null 2>&1 || true
						else
							echo "Warning: apt installation of fonts-fandol failed." >&2
						fi
					else
						echo "Warning: apt-get update failed; unable to install fonts-fandol automatically." >&2
					fi
				else
					echo "Warning: fonts-fandol package missing and automatic installation requires sudo access." >&2
					echo "Please install it manually (e.g. sudo apt-get install fonts-fandol)." >&2
				fi
			fi
		fi

		if (( have_tex_font == 0 )); then
			echo "Warning: Fandol fonts are missing; XeLaTeX will not find them." >&2
			echo "Install them manually using tlmgr or your OS package manager." >&2
			return 1
		fi

		if command -v fc-list >/dev/null 2>&1 && fc-list | grep -qi 'Fandol'; then
			echo "Fandol fonts detected in fontconfig cache."
			return 0
		fi

		if command -v fc-cache >/dev/null 2>&1; then
			local user_font_dir="$HOME/.local/share/fonts/fandol"
			mkdir -p "$user_font_dir"
			for _font in "${fandol_files[@]}"; do
				local font_path
				font_path=$(kpsewhich "$_font" 2>/dev/null || true)
				if [[ -n "$font_path" && -f "$font_path" ]]; then
					install -m644 "$font_path" "$user_font_dir/$_font" 2>/dev/null || cp "$font_path" "$user_font_dir/$_font" 2>/dev/null || true
				fi
			done
			fc-cache -f "$user_font_dir" >/dev/null 2>&1 || fc-cache -f >/dev/null 2>&1 || true
			if command -v fc-list >/dev/null 2>&1 && fc-list | grep -qi 'Fandol'; then
				echo "Fandol fonts registered with fontconfig."
				return 0
			fi
			if [[ -f "$user_font_dir/FandolSong-Regular.otf" ]]; then
				echo "Fandol fonts copied into $user_font_dir."
				return 0
			fi
		fi

		echo "Warning: Unable to register Fandol fonts with fontconfig automatically." >&2
		echo "You may need to install them system-wide so XeLaTeX can locate them." >&2
		return 1
	}

	ensure_fandol_fonts || true

	declare -a missing_tex_packages=()
	while IFS=: read -r pkg sty; do
		[[ -z "$pkg" || -z "$sty" ]] && continue
		if ! kpsewhich "$sty" >/dev/null 2>&1; then
			missing_tex_packages+=("$pkg")
		fi
	done <<'EOF'
adjustbox:adjustbox.sty
tabularray:tabularray.sty
physics:physics.sty
pgfplots:pgfplots.sty
pgf:tikz.sty
tikz-3dplot:tikz-3dplot.sty
mathrsfs:mathrsfs.sty
titlesec:titlesec.sty
fancyhdr:fancyhdr.sty
setspace:setspace.sty
enumitem:enumitem.sty
geometry:geometry.sty
wrapfig:wrapfig.sty
etoolbox:etoolbox.sty
multirow:multirow.sty
hyperref:hyperref.sty
mathtools:mathtools.sty
EOF

    if (( ${#missing_tex_packages[@]} > 0 )); then
        if command -v tlmgr >/dev/null 2>&1; then
            echo "Installing missing TeX packages via tlmgr: ${missing_tex_packages[*]}"
            tlmgr install "${missing_tex_packages[@]}"
        else
            echo "Warning: Missing TeX packages detected (${missing_tex_packages[*]}), but tlmgr is not available." >&2
            echo "Please install them using your TeX distribution's package manager." >&2
        fi
    else
        echo "All required TeX packages are present."
    fi
else
	echo "Warning: kpsewhich not found; skipping TeX package checks." >&2
fi

