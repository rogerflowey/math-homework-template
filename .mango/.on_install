#!/usr/bin/env bash
set -euo pipefail

repo_root="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
mango_dir="$repo_root/.mango"
venv_path="$mango_dir/venv"

# Check Python version
python_version=$(python3 -c 'import sys; print(".".join(map(str, sys.version_info[:2])))')
required_version="3.8"

if [ "$(printf '%s\n' "$required_version" "$python_version" | sort -V | head -n1)" != "$required_version" ]; then
    echo "Error: Python $required_version or higher is required. Found $python_version"
    exit 1
fi

if [[ ! -d "$venv_path" ]]; then
	echo "Creating virtual environment..."
	python3 -m venv "$venv_path"
fi

source "$venv_path/bin/activate"
echo "Upgrading pip..."
pip install --upgrade pip
echo "Installing dependencies..."
pip install -r "$repo_root/requirements.txt"
echo "Installation complete!"

echo "Checking TeX Live packages..."
if command -v kpsewhich >/dev/null 2>&1; then
	declare -a missing_tex_packages=()
	while IFS=: read -r pkg sty; do
		[[ -z "$pkg" || -z "$sty" ]] && continue
		if ! kpsewhich "$sty" >/dev/null 2>&1; then
			missing_tex_packages+=("$pkg")
		fi
	done <<'EOF'
adjustbox:adjustbox.sty
tabularray:tabularray.sty
physics:physics.sty
pgfplots:pgfplots.sty
pgf:tikz.sty
tikz-3dplot:tikz-3dplot.sty
mathrsfs:mathrsfs.sty
titlesec:titlesec.sty
fancyhdr:fancyhdr.sty
setspace:setspace.sty
enumitem:enumitem.sty
geometry:geometry.sty
wrapfig:wrapfig.sty
etoolbox:etoolbox.sty
multirow:multirow.sty
hyperref:hyperref.sty
mathtools:mathtools.sty
EOF

	if (( ${#missing_tex_packages[@]} > 0 )); then
		if command -v tlmgr >/dev/null 2>&1; then
			echo "Installing missing TeX packages via tlmgr: ${missing_tex_packages[*]}"
			tlmgr install "${missing_tex_packages[@]}"
		else
			echo "Warning: Missing TeX packages detected (${missing_tex_packages[*]}), but tlmgr is not available." >&2
			echo "Please install them using your TeX distribution's package manager." >&2
		fi
	else
		echo "All required TeX packages are present."
	fi
else
	echo "Warning: kpsewhich not found; skipping TeX package checks." >&2
fi
